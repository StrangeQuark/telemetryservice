# Application name
spring.application.name=${SPRING_APPLICATION_NAME:telemetryservice}

# Server port
server.port=${SERVER_PORT:6050}

# MongoDB
spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE}

# CORS origins
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:6080}

# Kafka
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:telemetry-kafka:9093}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:telemetry-group}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
spring.kafka.consumer.value-deserializer=${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.ErrorHandlingDeserializer}
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_DESERIALIZER_VALUE_DELEGATE_CLASS:org.springframework.kafka.support.serializer.JsonDeserializer}
spring.kafka.consumer.properties.spring.json.trusted.packages=:${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES:*}
spring.kafka.consumer.properties.spring.json.value.default.type=${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_VALUE_DEFAULT_TYPE:com.strangequark.telemetryservice.event.TelemetryEvent}
